spring.application.name=gateway-service
server.port=8080

# Eureka 설정
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
eureka.instance.prefer-ip-address=true
eureka.client.register-with-eureka=true
eureka.client.fetch-registry=true

# Discovery 설정
spring.cloud.discovery.enabled=true
spring.cloud.gateway.discovery.locator.enabled=true
spring.cloud.gateway.discovery.locator.lower-case-service-id=true

# Front-Admin API 라우팅 설정
spring.cloud.gateway.routes[0].id=front-admin-api
spring.cloud.gateway.routes[0].uri=lb://FRONT-ADMIN
spring.cloud.gateway.routes[0].predicates[0]=Path=/api/admin/**
spring.cloud.gateway.routes[0].filters[0]=RewritePath=/api/admin/(?<segment>.*), /admin/${segment}

# Hotel Service API 라우팅 설정
spring.cloud.gateway.routes[1].id=hotel-api-service
spring.cloud.gateway.routes[1].uri=lb://HOTEL-SERVICE
spring.cloud.gateway.routes[1].predicates[0]=Path=/api/hotels/**
spring.cloud.gateway.routes[1].filters[0]=RewritePath=/api/hotels/(?<segment>.*), /hotels/${segment}

# Booking Service API 라우팅 설정
spring.cloud.gateway.routes[2].id=booking-service
spring.cloud.gateway.routes[2].uri=lb://BOOKING-SERVICE
spring.cloud.gateway.routes[2].predicates[0]=Path=/api/bookings/**
spring.cloud.gateway.routes[2].filters[0]=RewritePath=/api/bookings/(?<segment>.*), /bookings/${segment}

# Frontend Service (View Pages) 라우팅 설정
spring.cloud.gateway.routes[3].id=frontend-view-service
spring.cloud.gateway.routes[3].uri=lb://FRONTEND-SERVICE
spring.cloud.gateway.routes[3].predicates[0]=Path=/view/admin/**
spring.cloud.gateway.routes[3].filters[0]=RewritePath=/view/admin/(?<segment>.*), /admin/page/${segment}

# Frontend Hotels Service 라우팅 설정
spring.cloud.gateway.routes[4].id=frontend-hotels
spring.cloud.gateway.routes[4].uri=lb://frontend-service
spring.cloud.gateway.routes[4].predicates[0]=Path=/view/hotels/**
spring.cloud.gateway.routes[4].filters[0]=RewritePath=/view/hotels(?<segment>/?.*), /hotels${segment}

# Booking View Pages (Frontend) 라우팅 설정
spring.cloud.gateway.routes[5].id=frontend-bookings
spring.cloud.gateway.routes[5].uri=lb://frontend-service
spring.cloud.gateway.routes[5].predicates[0]=Path=/view/bookings/**
spring.cloud.gateway.routes[5].filters[0]=RewritePath=/view/bookings(?<segment>/?.*), /bookings${segment}

# CORS 설정
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-origins=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-methods=*
spring.cloud.gateway.globalcors.cors-configurations.[/**].allowed-headers=*

# HTTP client 설정
spring.cloud.gateway.httpclient.connect-timeout=30000
spring.cloud.gateway.httpclient.response-timeout=30000

# Logging 설정
logging.level.org.springframework.cloud.gateway=DEBUG
logging.level.reactor.netty=DEBUG
logging.level.org.springframework.web=DEBUG

# Spring Gateway 설정
spring.main.web-application-type=reactive
spring.cloud.gateway.metrics.enabled=true
